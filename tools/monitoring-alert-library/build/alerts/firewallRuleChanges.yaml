#@ load("/alert.lib.star", "build_alert")
#@ load("/alert.lib.yaml", "generate_notification_channels")
#@ load("@ytt:template", "template")
#@ alert = build_alert("firewallRuleChanges")

#@ if alert.to_generate():
displayName: 'VPC Network Firewall Rule Changes'
documentation:
  content: >-
    Log-based alerting policy in project ${project} detected VPC Network Firewall rule changes.

    This alert helps ensure security by monitoring creation, modification, or deletion of firewall rules.
    ```
    resource.type="gce_firewall_rule"
    AND (protoPayload.methodName:"compute.firewalls.patch"
    OR protoPayload.methodName:"compute.firewalls.insert"
    OR protoPayload.methodName:"compute.firewalls.delete")
    ```
  mimeType: text/markdown
conditions:
  - displayName: 'Log match condition: firewall rule changes'
    conditionMatchedLog:
      filter: >-
        resource.type="gce_firewall_rule"
        AND (protoPayload.methodName:"compute.firewalls.patch"
        OR protoPayload.methodName:"compute.firewalls.insert"
        OR protoPayload.methodName:"compute.firewalls.delete")
combiner: OR
#@ if alert.has_notification_channels():
_: #@ template.replace(generate_notification_channels())
#@ end
alertStrategy:
  notificationRateLimit:
    period: 300s
  autoClose: 604800s
#@ end