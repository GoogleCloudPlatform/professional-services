alerts:
  projectOwnershipChange:
    combiner: OR
    conditions:
    - condition_threshold:
        aggregations:
        - alignment_period: 60s
          cross_series_reducer: REDUCE_SUM
          group_by_fields:
          - metric.label.principal
          - metric.label.method_name
          - metric.label.organization_id
          - metric.label.folder_id
          - metric.label.project_id
          per_series_aligner: ALIGN_SUM
        comparison: COMPARISON_GT
        duration: 0s
        filter: resource.type = "logging_bucket" AND metric.type = "logging.googleapis.com/user/projectOwnershipChange"
        threshold_value: 0
        trigger:
          count: 1
      display_name: Project Ownership Changes
    display_name: Project Ownership Changes
    documentation:
      content: "Log-based alerting policy in project ${project} detected a project\
        \ ownership assignments or changes. ``` (protoPayload.serviceName=\"cloudresourcemanager.googleapis.com\"\
        ) AND  (ProjectOwnership OR projectOwnerInvitee)  OR  (\n  protoPayload.serviceData.policyDelta.bindingDeltas.action=\"\
        REMOVE\" AND \n  protoPayload.serviceData.policyDelta.bindingDeltas.role=\"\
        roles/owner\"\n)  OR  (\n  protoPayload.serviceData.policyDelta.bindingDeltas.action=\"\
        ADD\" AND \n  protoPayload.serviceData.policyDelta.bindingDeltas.role=\"roles/owner\"\
        \n) ```"
      mime_type: text/markdown
    notification_channels:
    - projects/my-project/notificationChannels/11111111111111
logging_metrics:
  projectOwnershipChange:
    bucket_name: projects/my-project/locations/asia-southeast1/buckets/org-logging-bucket
    description: Project Ownership Changes
    filter: "(protoPayload.serviceName=\"cloudresourcemanager.googleapis.com\") AND\
      \ (ProjectOwnership OR projectOwnerInvitee) OR (\n  protoPayload.serviceData.policyDelta.bindingDeltas.action=\"\
      REMOVE\" AND\n  protoPayload.serviceData.policyDelta.bindingDeltas.role=\"roles/owner\"\
      \n) OR (\n  protoPayload.serviceData.policyDelta.bindingDeltas.action=\"ADD\"\
      \ AND\n  protoPayload.serviceData.policyDelta.bindingDeltas.role=\"roles/owner\"\
      \n)"
    label_extractors:
      folder_id: EXTRACT(labels.folder_id)
      method_name: EXTRACT(protoPayload.methodName)
      organization_id: EXTRACT(labels.organization_id)
      principal: EXTRACT(protoPayload.authenticationInfo.principalEmail)
      project_id: EXTRACT(labels.project_id)
    metric_descriptor:
      labels:
      - description: principal
        key: principal
        value_type: STRING
      - description: method_name
        key: method_name
        value_type: STRING
      - description: organization_id
        key: organization_id
        value_type: STRING
      - description: folder_id
        key: folder_id
        value_type: STRING
      - description: project_id
        key: project_id
        value_type: STRING
      metric_kind: DELTA
      unit: '1'
      value_type: INT64
