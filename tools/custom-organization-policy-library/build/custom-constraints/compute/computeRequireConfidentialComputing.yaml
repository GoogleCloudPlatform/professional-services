#@ load("/constraints.lib.star", "build_constraint")
#@ constraint = build_constraint("computeRequireConfidentialComputing")

#@ def condition(machine_types):
#@   return str(machine_types) + ".exists(machine_type, resource.machineType.endsWith(machine_type)) && (has(resource.confidentialInstanceConfig) == false)"
#@ end

#@ if constraint.to_generate():
name: #@ constraint.constraint_name()
resource_types: compute.googleapis.com/Instance
condition: #@  condition(constraint.params().machine_types)
action_type: DENY
method_types: CREATE
display_name: Require Compute Instances to have confidential computing enabled for certain machine types
description:  Ensure that Compute Instances have confidential computing enabled for certain machine types
#@ end
