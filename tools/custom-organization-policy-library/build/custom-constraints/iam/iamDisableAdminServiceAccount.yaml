#@ load("/constraints.lib.star", "build_constraint")
#@ constraint = build_constraint("iamDisableAdminServiceAccount")

#@ def exceptions(domains):
#@   quoted_domains = ["'%s'" % d for d in domains]
#@   joined_domains = ", ".join(quoted_domains)
#@   return "!MemberSubjectMatches(member, [%s])" % joined_domains
#@ end

#@ def condition(principal_exceptions):
#@   lines = [
#@     "resource.bindings.exists(binding,",
#@     "  binding.members.exists(member,",
#@     "    {exceptions} &&",
#@     "    !MemberSubjectEndsWith(member, ['@cloudservices.gserviceaccount.com']) &&",
#@     "    MemberSubjectStartsWith(member, ['serviceAccount:'])",
#@     "  ) &&",
#@     "  (",
#@     "    RoleNameMatches(binding.role, ['roles/editor']) ||",
#@     "    RoleNameMatches(binding.role, ['roles/owner']) ||",
#@     "    RoleNameContains(binding.role, ['admin', 'Admin'])",
#@     "  )",
#@     ")"
#@   ]
#@   
#@   full_string = "\n".join(lines)
#@   return full_string.format(exceptions=exceptions(principal_exceptions))
#@ end


#@ if constraint.to_generate():
name: #@ constraint.constraint_name()
resourceTypes:
- iam.googleapis.com/AllowPolicy
methodTypes:
- CREATE
- UPDATE
condition: #@ condition(constraint.params().exceptions)
actionType: DENY
displayName: Deny use of the basic roles and usage of admin role for sevice account
description: Ensure no use of the basic roles (viewer, editor and owner) and usage of admin role for sevice account
#@ end