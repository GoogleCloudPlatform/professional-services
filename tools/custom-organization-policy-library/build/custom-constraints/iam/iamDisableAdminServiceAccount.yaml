#@ load("/constraints.lib.star", "build_constraint")
#@ constraint = build_constraint("iamDisableAdminServiceAccount")

#@ if constraint.to_generate():
name: #@ constraint.constraint_name()
resourceTypes:
- iam.googleapis.com/AllowPolicy
methodTypes:
- CREATE
- UPDATE
condition: >- 
  resource.bindings.exists(binding, 
    binding.members.exists(member,MemberSubjectStartsWith(member, ['serviceAccount:'])) && 
    (
      RoleNameMatches(binding.role, ["roles/editor"]) || 
      RoleNameMatches(binding.role, ["roles/owner"]) ||
      RoleNameContains(binding.role, ['admin', "Admin"])
    )
  )
actionType: DENY
displayName: Deny use of the basic roles and usage of admin role for sevice account
description: Ensure no use of the basic roles (viewer, editor and owner) and usage of admin role for sevice account
#@ end