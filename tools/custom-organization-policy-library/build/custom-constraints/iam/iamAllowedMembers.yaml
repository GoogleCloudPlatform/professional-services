#@ load("/constraints.lib.star", "build_constraint")
#@ constraint = build_constraint("iamAllowedMembers")

#@ def allowed_domains(domains):
#@   quoted_domains = ["'%s'" % d for d in domains]
#@   joined_domains = ", ".join(quoted_domains)
#@ 
#@   return "!MemberSubjectEndsWith(member, [%s])" % joined_domains
#@ end

#@ def condition(domains):
#@   lines = [
#@     "resource.bindings.exists(binding,",
#@     "  binding.members.exists(member,",
#@     "    {domains}",
#@     "  )",
#@     ")"
#@   ]
#@   
#@   full_string = "\n".join(lines)
#@   return full_string.format(domains=allowed_domains(domains))
#@ end


#@ if constraint.to_generate():
name: #@ constraint.constraint_name()
resourceTypes:
- iam.googleapis.com/AllowPolicy
methodTypes:
- CREATE
- UPDATE
condition: #@ condition(constraint.params().domains)
actionType: DENY
displayName: Deny principals and members outside the organization domain
description: Ensure no binding are done with members outside the organization domain
#@ end