#@ load("/constraints.lib.star", "build_constraint")
#@ constraint = build_constraint("firewallRestrictPublicAccessPolicyRule")

#@ def condition():
#@   lines = [
#@     "resource.rules.exists(rule,",
#@     "  rule.priority < 2147483644 &&",
#@     "  rule.direction == 'INGRESS' &&",
#@     "  rule.match.srcIpRanges.exists(range, range == '0.0.0.0/0') &&",
#@     "  !rule.match.layer4Configs.exists(l4,",
#@     "    l4.ipProtocol == 'icmp' ||",
#@     "    (l4.ipProtocol == 'tcp' && has(l4.ports) && '443' in l4.ports) ||",
#@     "    (l4.ipProtocol == 'udp' && has(l4.ports) && '3389' in l4.ports) ||",
#@     "    (l4.ipProtocol == 'sctp' && has(l4.ports) && '22' in l4.ports)",
#@     "  )",
#@     ")"
#@   ]
#@   return "\n".join(lines)
#@ end

#@ def description():
#@   lines = [
#@     "Prevent Firewall Policy rules from 0.0.0.0/0 except for allowed protocols (ICMP, TCP:443, UDP:3389,",
#@     "SCTP:22). TCP:22 and TCP:3389 are handled by separate constraints.",
#@   ]
#@   return "\n".join(lines)
#@ end

#@ if constraint.to_generate():
name: #@ constraint.constraint_name()
resource_types:
- compute.googleapis.com/FirewallPolicy
condition: #@ condition()
action_type: DENY
method_types:
- CREATE
- UPDATE
display_name: Restrict Firewall Policy rules allowing public Internet access
description: #@ description()
#@ end
