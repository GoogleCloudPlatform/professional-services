{
  "name": "deidentify-csv-gcs-to-bq",
  "description": "De-identifies structured CSV data from GCS using a DLP template and writes it to BigQuery.",
  "parameters": [
    { "name": "file_pattern", "label": "Input GCS file pattern", "helpText": "e.g. gs://<bucket>/*.csv", "regexes": ["^gs://.*$"] },
    { "name": "dataset", "label": "Output BigQuery Dataset", "helpText": "BigQuery dataset where the output table will be created." },
    { "name": "deidentify_template_name", "label": "DLP De-identification Template", "helpText": "Full resource name, e.g. projects/<PROJECT_ID>/locations/<LOCATION>/deidentifyTemplates/<TEMPLATE_ID>" },
    { "name": "csv_headers", "label": "CSV headers (comma-separated)", "helpText": "Provide column names matching the CSV and DLP template (alternative to headers_gcs_uri)", "optional": true },
    { "name": "headers_gcs_uri", "label": "Headers file (gs://)", "helpText": "GCS path to a text file whose first line is the header row (alternative to csv_headers)", "regexes": ["^gs://.*$"], "optional": true },
    { "name": "batch_size", "label": "Batch size", "helpText": "CSV lines per DLP call (keep within DLP request limits)", "optional": true },
    { "name": "skip_header_lines", "label": "Skip header lines", "helpText": "Number of header lines to skip when reading CSV", "optional": true },
    { "name": "output_table", "label": "Output table name", "helpText": "Defaults to output_<DLP template id>", "optional": true }
  ]
}
