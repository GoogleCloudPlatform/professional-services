# Standard Terraform .gitignore
#
# More information: https://www.terraform.io/docs/cli/init/index.html#safe-to-ignore-files-and-directories
# https://github.com/github/gitignore/blob/main/Terraform.gitignore

# Local .terraform directories
terraform/.terraform/

# .tfstate files
# These files store the state of your infrastructure and can contain sensitive information.
# They should not be committed to version control, especially in shared repositories.
# Use a remote backend to store state securely.
*.tfstate
*.tfstate.*
*.tfstate.backup

# Plan files
# Plan files can also contain sensitive information depending on your configuration.
*.tfplan
tfplan.out

# Crash log files
crash.log
crash.*.log

# Exclude all .tfvars files, which are likely to contain sensitive data,
# such as passwords, private keys, and other secrets. These should not be
# part of version control as they are data points which are potentially
# sensitive and subject to change depending on the environment.
# Example files should be an exception.
*.tfvars
*.tfvars.json
!*.tfvars.example

# Ignore override files as they are usually used for local testing or sensitive data.
override.tf
override.tf.json
*_override.tf
*_override.tf.json

# Terraform lock file
# This file is generated by 'terraform init' and locks provider versions.
# It should be committed to version control.
# However, the specific path for this project's .terraform.lock.hcl is being added.
# The one at the root of the terraform module directory should be kept.
# For this example, the .gitignore is in examples/iam-deny, so the path is relative.
terraform/.terraform.lock.hcl

# Ignore CLI configuration files
.terraformrc
terraform.rc
```
